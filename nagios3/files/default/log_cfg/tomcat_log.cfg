# Configuration file for check_logfiles command
#

# where the state information will be saved.
$seekfilesdir = '/var/tmp';

# where protocols with found patterns will be stored.
$protocolsdir = '/var/tmp';

# where scripts will be searched for.
#$scriptpath = '/var/log/tomcat7';

@searches = (
  {
    logfile => '/var/log/tomcat7/catalina.out',
    
    criticalpatterns => [
	'exception',
        'Exception',
	],

    warningpatterns => [
	'error',
        'Error',
        'ERROR',
	],

    okpatterns => [
        '^\[[^\[]*\[WARN',
        'java.lang.IllegalArgumentException: PasswordsDontMatchMsg',
        'saml2.SPInitPostController.*Exception processing SAML: Exception extracting SAML message from the request: This message decoder only supports the HTTP POST method'
        ],

    options => 'noprotocol,count,nologfilenocry',
  },
  {
    logfile => '/var/log/tomcat7/cloudpass.log',
    
    criticalpatterns => [
	'exception',
        'Exception',
	],

    warningpatterns => [
	'error',
        'Error',
        'ERROR',
	],

    okpatterns => [
        '^\[[^\[]*\[WARN',
        'java.lang.IllegalArgumentException: PasswordsDontMatchMsg',
        'saml2.SPInitPostController.*Exception processing SAML: Exception extracting SAML message from the request: This message decoder only supports the HTTP POST method'
        ],

     options => 'noprotocol,count,nologfilenocry',
  },
  {
    logfile => '/var/lib/tomcat7/logs/catalina.out',
    
    criticalpatterns => [
	'exception',
        'Exception',
	],

    warningpatterns => [
	'error',
        'Error',
        'ERROR',
	],

    okpatterns => [
        '^\[[^\[]*\[WARN',
        'java.lang.IllegalArgumentException: PasswordsDontMatchMsg',
        'saml2.SPInitPostController.*Exception processing SAML: Exception extracting SAML message from the request: This message decoder only supports the HTTP POST method'
        ],

    options => 'noprotocol,count,nologfilenocry',
  },
  {
    logfile => '/var/lib/tomcat7/logs/cloudpass.log',
    
    criticalpatterns => [
	'exception',
        'Exception',
	],

    warningpatterns => [
	'error',
        'Error',
        'ERROR',
	],

    okpatterns => [
        '^\[[^\[]*\[WARN',
        'java.lang.IllegalArgumentException: PasswordsDontMatchMsg',
        'saml2.SPInitPostController.*Exception processing SAML: Exception extracting SAML message from the request: This message decoder only supports the HTTP POST method'
        ],

    options => 'noprotocol,count,nologfilenocry',
  },
);
